<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE suite SYSTEM "http://testng.org/testng-1.0.dtd">

<suite name="River Test Suite" verbose="1">
    <parameter name="starturl" value="jdbc:hsqldb:mem:test"/>
    <parameter name="stopurl" value="jdbc:hsqldb:mem:test"/>
    <parameter name="driver" value="org.hsqldb.jdbcDriver"/>
    <parameter name="user" value="sa"/>
    <parameter name="password" value=""/>

    <test name="RiverTests">
        <parameter name="create" value="hsqldb/create-ordertables.sql"/>
        <parameter name="delete" value="hsqldb/delete-ordertables.sql"/>
        <parameter name="sql1"
                   value="select products.name as &quot;product.name&quot;, orders.customer as &quot;product.customer.name&quot;, orders.quantity * products.price as &quot;product.customer.bill&quot; from products, orders where products.name = orders.product"/>
        <parameter name="sql2"
                   value="select orders.department as &quot;_index&quot;, orders.customer as &quot;_id&quot;, orders.customer as &quot;contact.customer&quot;, employees.name as &quot;contact.employee&quot; from orders left join employees on orders.department = employees.department"/>
        <parameter name="sql3"
                   value="select products.name as &quot;product.name&quot;, orders.customer as &quot;product.customer.name&quot;, orders.quantity * products.price as &quot;product.customer.bill&quot; from products, orders where products.name = orders.product and orders.quantity * products.price > ?"/>
        <parameter name="sql4"
                   value="select products.name as &quot;product.name&quot;, orders.customer as &quot;product.customer.name&quot;, orders.quantity * products.price as &quot;product.customer.bill&quot; from products, orders where products.name = orders.product and {fn timestampdiff(SQL_TSI_DAY, cast(? as timestamp), orders.created)} > 14"/>
        <parameter name="sql5"
                   value="select 'product' as &quot;_index&quot;, orders.department as &quot;_id&quot;, orders.product as &quot;orders.product&quot; from orders"/>
        <classes>
            <class name="org.xbib.elasticsearch.river.jdbc.strategy.mock.RiverMockTests"/>
        </classes>
    </test>

</suite>